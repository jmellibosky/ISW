GEstion de configuracion de SW - CLASE INVERTIDA 20/8

Es una disciplina que nos permite mantener la integridad del producto y manejar el control de cambios sobre el producto.
SW es cualquier producto que sale de cualquier actividad del ciclo de vida del proyecto.

Un producto para que tenga integridad debe cumplir con las expectativas de costo, cumplir con las necesidades del producto y 2 mas...

¿Es 1 sola persona la que lleva a cabo esta actividad? Todos tenemos responsabilidad por el Producto que estamos contruyendo entre todos. A la hora
de crear IC.

Disciplinas de soporte del SW

La Administración de configuración de SW engloba (ayuda a que el resto de las disciplinas se junten y puedan hacer mejor su trabajo):
+ Ctrl de calidad de P
+ Ctrl de calidad de producto
+ Prueba de SW

para asegurar la calidad de SW.

Su porpósito es establecer y mantener la integridad de los productos de SW a lo largo de su ciclo de vida.

Ej de IC: RTO en 1 word, herramienta de gestión de RTO, Excel de RTO, US, ERS, Doc de AR.

IC: elemento que se puede meter a la PC en cualquier formato.
Definición en ppt.

Los IC van a parar al repositorio.
Repositorio: es el lugar en donde voy a guardar mis IC. Debe tener 1 estructura para almacenar en orden los IC.
La esencia de tener 1 repositorio con 1 estructura conocida y recordada por todos los que van a trabajar en 1 proyecto implica que quien vaya
a buscar 1 IC cuando lo necesite lo pueda encontrar.
Para evitar que lo que yo hice pueda ser accedido por los demás en el equipo.

Windows -> tortoise --> cliente de Windows

Commit ---> mandar los cambios de 1 IC al repositorio
Update ---> controlar si hay alguien que haya cambiado 1 IC del repositorio (puede recuperar el IC borrado)

El valor de 1 repositorios controlado en estos terminos hace que tengamos la tranquilidad de trabajar con 1 contencion para equilibrar la
facilidad que hay de editar y borrar el SW. Poder controlar todos los elmentos que son importantes para mi SW aplicando el uso de herramientas
de gestión.

Hay 2 prácticos que son de usar 1 directorio github para gestionar los doc a lo largo de la materia.

Version: forma particular de 1 artefacto en en un instante determinado de t y contexto. Es 1 estado que tiene que ver con el t. Es importante el concepto para
realizar el control de versión.

Estos conceptos son claves y se preguntan en el FINAL.

Que es la Configuración del SW?: 1 conjunto de IC con su correspondiente versión en 1 momento dado. Foto de 1 producto.
Linea base: Es 1 estado estable que se marca y abarca 1 conjunto de IC (no todos) identificados en 1 repositorio, 
los cuales nos aseguran 1 version estable del SW. Validada como estable por 1 P formal.

(Componente C descartado en ppt).

Lineas Base de especificación y Lineas Base de Codificación.

Puedo tener 1 LB para cada etapa del producto. Cada equipo decide como tener las LB. Tener 1 sola LB tampoco es malol

Comité de control de cambio: Conformado por representantes del equipo, de todos a quellos que pueden verse afectados por el cambio, ACTUA SOLAMENTE
PARA CONTROLAR LA CALIDAD DE LA LB. SI LA peticion de CAMBIO AFECTA 1 LB QUE YA ESTA MARCADA AHI INTERVIENE EL COMITE DE CAMBIO. Interviene, Autoriza (da el OK) el cambio
y CONTROLA si lo que se cambió es lo que se autorizó a cambiar y no otra cosa. NOTIFICA a las partes involucradas.
Esto existe porque la gente se debe enterar si o si que 1 cambio se efectúo, para eso existen las LB.
Si NO hay LB NO hay CCC.

El propósito fundamental de tener controladas las LB es asegurarse de que TODOS los comprometidos en el PY fueron notificados del cambio que ocurrió

ej: cambiar los RTO y no avisar al testing, haciendo que su trabajo no sirva porque se van a encontrar con otro código.

Ramas

rama master: contiene la LB, el producto de SW estable.
rama: bifurcaciones de la rama master para probar funcionalidad o cambios que luego de ser implementados o se van a descartar o se van a integrar
a la master. Permiten la experimentación.

Actividades fundamentales que definen la gestión de configuración de SW / Actividades fundamentales de la ADM de configruacion de SW

Identificar IC: basico para identificar

1) Deben identificarse univocamente (nombre univoco y la version, que no va a ser parte del nombre pero va a estar asociada)
2) Garantizar su versionado
3) Donde guardarlo dentro del repositorio


3 IC distintos: dependen del ciclo de vida, cuanto t me va a demorar mantener x IC. El Producto tiene el ciclo de vida mas largo.
+ producto: ERS, AR, Codigo, Manual de U (I de como se comporta funcionalmente el producto). Lo que de minimo se debe mantener en 1 Producto.
+ Proyecto: Plan de proyecto, Cronograma (
+ Iteracion: Plan de iteracion, Report de defectos.

¿ Cuantas iteraciones debe tener de minima 1 ciclo de vida iterativa? Minimo 2 porque sino seria cascada. Tenemos 1 plan de proyeto y n iteraciones.

Comite de ctrl de cambio: no es muy protocolar.

Auditorias de configuración de SW: ¿Cuantos tipos de auditoria hay ?

La fisica: Apunta a la verficación de todo lo guardado en el repositorio. Se mira la integridad del repositorio. Si los IC estan donde deben estar

La funcional: Se utiliza para verificar la integridad de los RTOS.

1ro se realiza la fisicam, si funciona bien y esta disp el reporte de auditoria fisica, se hace la funcional. Sino pasa la auditoria de gestion de
configuracion no sale a produccion.

Ultima actv: Informes de estado. Dar visibilidad acerca de la configuracion. Son automatizados muchas veces, que hacen visible la situacion de 
configuración del producto. Cuando se pidieron cambios?, quien los autorizo ?.

Plan de gestion de configuracion: debe contestar sobre las 4 actv que vimos recien. Tiene 1 seccion para cada 1 de las actividades que vimos (4).

Permite implementar la auditoria.

Integracion, Entrega y despliegue continuos: disciplinas de evolución.
Las metodologias agiles son muy formales y rigurosas respecto a la calidad de SW que se entrega. Apunta a que el testing este muy automatizado.
Es importante tener 1 versión estable del producto para que a la hora de entregar algo al cliente no terminemos entregando solo fallos.

Son practicas continuas, la diff entre estas 3 practicas es el nivel de automatización de las pruebas. el ultimo nivel 	es el despliegue continuo

Gestión de configuracion de SW en ambientes agiles.

Esta disciplina es aplicable es ambientes agiles ? Es aplicable. Pero solo lo aplicamos si consideramos que suma valor al producto.

El manifiesto agil apunta a gestionar proyectos. Es + abarcativa.
La gestion de configuracion de SW apunta a gestionar el producto.

¿ Que actv se pueden prescindir de la SCM?
La clave de la auditoria es que la haga alguien externo al equipo. Es 1 actividad que 1 equipo agil facilmente la pueda descartar. De todas esta es
la que mas se evalua si hacen falta o no. El resto de las 3 Si o SI se usan, pero el equipo especifica como y en que medida usarlas.
La idea es que se incorpore 1 cultura de la gestion de configuracion.

No toma patrones de gestion de configuracion es mas que nada para el trabajo.
Se pide 1 definicion de la gestion de configuracion. La de la ieee es 1 clasico.

------------------------------------------------------------------------------------------- Añadiendo I

El propósito de la disciplina de SCM es mantener la integridad del Producto a lo largo del CV del Producto ( NO del PY).
¿Qué debe tener 1 Producto para tener integridad?
1) Debe satisfacer las necesidades del U
2) Tiene que ser fácil de ubicar y de rastrear durante el CV
3) Debe satisfacer los criterios de la performance
4) Debe cumplir con la expectativa de costo

¿Mantener la integridad del Producto debe ser responsabilidad de 1 sola persona?

Actualmente, existe el rol del Configuration Manager que es el encargado de velar por el cambio.
Pero todos tenemos responsabilidad por el producto de SW que estamos construyendo. Cada vez que alguien
genera 1 IC es responsable por respetar los lineamientos que el ED definió respecto a como mantener la
integridad del producto.
Van a existir roles (no full time) que van a dedicar tiempo a la SCM.

La SCM nos permite tener ctrl de que es lo que cambió en determiando momento.
Cada IC debe tener su versión.

----------------------- TRAZABILIDAD ---------------------------------------------------------------------
La trazabilidad software es una antigua buena práctica, recomendada para medianos o grandes desarrollos software, 
que trata sobre cómo enlazar o relacionar los requisitos con otros elementos del ciclo de vida, principalmente, 
casos de prueba y código.

¿Por qué es bueno tener trazabilidad software?

Aparte de porque alguien te obligue a tener trazabilidad en tu proyecto, hay otras razones de su importancia, 
principalmente las siguientes:
– Sabiendo qué código es el que implementa cada requisito puedo estimar con más precisión el esfuerzo que me 
llevará implementar una petición de cambio sobre un requisito, porque puedo saber cuánto código involucra.
Además, como la trazabilidad debe ser bidireccional, no sólo desde requisitos a código, también desde 
código a requisitos:
– Si toco el código, por ejemplo, para refactorizarlo, para mejorar rendimiento, para un mantenimiento perfectivo, 
por temas de seguridad, etc., sabré qué requisitos de usuario pueden verse afectados.
– Podré localizar código muerto que está ahí consumiendo dinero pero no da respuesta a ningún requisito de usuario, 
o a requisitos que podría eliminar.

¿Cómo implementar la trazabilidad software?

Hace mucho mucho mucho tiempo la gente implementaba la trazabilidad con documentos, con tablas en Word o en Excel. 
En filas los requisitos, en columnas los casos de test o ficheros fuente, y una x para ver qué se relaciona con que.
Pero con el transcurrir de los años, nos dimos cuenta de que esa manera de llevar la trazabilidad era difícilmente 
mantenible, las tablas tenían muchos errores, porque siempre a alguien se le olvidaba actualizarlas… y ya nadie 
se fiaba de ellas y ahí se quedaban solas, en el mas absoluto abandono, esperando por si alguien, o algún auditor, la pedía.

Hoy en día, quien se toma en serio esto de la trazabilidad suele enlazar su herramienta de gestión de requisitos
poniendo en cada uno de los requisitos la “revisión”, en terminología subversión, del código que lo implementa. 
Y cada vez que se sube un fichero a la herramienta de control de versiones, poniendo en los comentarios el 
identificador del requisito con el qué se relaciona.